set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux#v2.1.3'

set -g @catppuccin_flavor "mocha"

set-option -g prefix C-a

set-option -g set-titles on
set-option -g set-titles-string '#W'

set -s escape-time 0
set-window-option -g mode-keys vi
set -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'wl-copy'

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

set -g default-terminal "alacritty" 
set-option -sa terminal-overrides ",alacritty*:Tc" 

set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows 1

set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# # Ensure window 1 exists and starts in ~/nixos
# # - On first client attach, create window 1 in ~/nixos if missing
# set-hook -g client-attached 'run-shell "(
#   tmux list-windows -F \"#{window_index}\" | grep -q ^1$ \
#   || (tmux new-window -c $HOME/nixos -t 1 -n nixos; tmux select-window -t 1)
# ) >/dev/null 2>&1"'
#
# # Protect window 1 from accidental kill via default keybinding (prefix &)
# unbind &
# bind & if-shell -F '#{==:#{window_index},1}' \
#   'display-message "Window 1 (nixos) is protected"' \
#   'kill-window'
#
# # Optional: recreate window 1 if it ever gets closed (requires tmux with window-closed hook)
# # If your tmux is older and lacks this hook, it will be ignored.
# set-hook -g window-closed 'run-shell "[ \"#{==:#{window_index},1}\" = 1 ] \
#   && tmux new-window -c $HOME/nixos -t 1 -n nixos >/dev/null 2>&1 || true"'
